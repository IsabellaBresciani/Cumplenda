// routes/birthdays.js

const express = require('express');
const router = express.Router();
const birthdaysController = require('../controllers/birthdaysController');
const authMiddleware = require('../middleware/authMiddleware'); // ¬°Importante! Middleware para proteger rutas

// --- Todas las rutas est√°n protegidas y requieren que el usuario est√© logueado ---
// Verificar si el middleware se importa correctamente
console.log('üîç ROUTES DEBUG: Importing auth middleware...');
try {
    const authMiddleware = require('../middleware/authMiddleware'); // o ../middlewares/
    console.log('‚úÖ Auth middleware imported successfully:', typeof authMiddleware);
    
    // --- Todas las rutas est√°n protegidas y requieren que el usuario est√© logueado ---
    router.use(authMiddleware);
    console.log('‚úÖ Auth middleware applied to all routes');
    
} catch (error) {
    console.error('‚ùå Error importing auth middleware:', error.message);
}
// --- Rutas CRUD para Cumplea√±os ---

// POST /birthdays/ -> Crear un nuevo cumplea√±os
router.post('/', birthdaysController.createBirthday);

// GET /birthdays/ -> Obtener TODOS los cumplea√±os del usuario logueado
router.get('/', birthdaysController.getAllBirthdays);

// GET /birthdays/:id -> Obtener UN cumplea√±os espec√≠fico por su ID
router.get('/:id', birthdaysController.getBirthdayById);

// PUT /birthdays/:id -> Actualizar un cumplea√±os espec√≠fico por su ID
router.put('/:id', birthdaysController.updateBirthday);

// DELETE /birthdays/:id -> Eliminar un cumplea√±os espec√≠fico por su ID
router.delete('/:id', birthdaysController.deleteBirthday);

module.exports = router;